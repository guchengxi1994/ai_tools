// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.5.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../cv.dart';
import '../cv/object_detect_result.dart';
import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

Future<String> classifyImage(
        {required String s,
        required String modelPath,
        List<String>? classes}) =>
    RustLib.instance.api
        .crateApiCvClassifyImage(s: s, modelPath: modelPath, classes: classes);

Future<void> yolov8Init({String? modelPath}) =>
    RustLib.instance.api.crateApiCvYolov8Init(modelPath: modelPath);

/// TODO
/// remove yolo models in gpu
Future<void> yolov8Cleanup() => RustLib.instance.api.crateApiCvYolov8Cleanup();

Future<List<ObjectDetectResult>> yolov8Detect({required List<int> img}) =>
    RustLib.instance.api.crateApiCvYolov8Detect(img: img);

Stream<String> loadModelStateStream() =>
    RustLib.instance.api.crateApiCvLoadModelStateStream();

Future<void> loadEfficientnet({required String modelPath}) =>
    RustLib.instance.api.crateApiCvLoadEfficientnet(modelPath: modelPath);

Future<void> loadBeit({required String modelPath}) =>
    RustLib.instance.api.crateApiCvLoadBeit(modelPath: modelPath);

Future<ClassificationResults> runClassification(
        {required String img, BigInt? topN}) =>
    RustLib.instance.api.crateApiCvRunClassification(img: img, topN: topN);
